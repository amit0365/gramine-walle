# Copyright (C) 2024 Gramine contributors
# SPDX-License-Identifier: BSD-3-Clause

# Node.js manifest file example

################################## BASE TEMPLATE #############################

libos.entrypoint = "{{ nodejs_dir }}/node"

loader.log_level = "{{ log_level }}"

loader.env.LD_LIBRARY_PATH = "/lib:{{ arch_libdir }}:/usr/{{ arch_libdir }}"

loader.insecure__use_cmdline_argv = true
loader.insecure__use_host_env = true

fs.mounts = [
  { uri = "file:{{ gramine.runtimedir() }}", path = "/lib" },
  { uri = "file:{{ arch_libdir }}", path = "{{ arch_libdir }}" },
  { uri = "file:/usr/{{ arch_libdir }}", path = "/usr/{{ arch_libdir }}" },
  { uri = "file:{{ nodejs_dir }}/node", path = "{{ nodejs_dir }}/node" },
{%- if nodejs_usr_share_dir %}
  { uri = "file:{{ nodejs_usr_share_dir }}", path = "{{ nodejs_usr_share_dir }}" },
{%- endif %}
  # Additional mount for our application
  { uri = "file:walle", path = "/walle" }
]

# Node.js expects around 1.7GB of heap on startup
sgx.enclave_size = "2G"

sgx.max_threads = {{ '1' if env.get('EDMM', '0') == '1' else '32' }}
sgx.edmm_enable = {{ 'true' if env.get('EDMM', '0') == '1' else 'false' }}

# Required for Node.js memory mappings with MAP_NORESERVE
sgx.use_exinfo = {{ 'true' if env.get('EDMM', '0') == '1' else 'false' }}

sgx.trusted_files = [
  "file:{{ nodejs_dir }}/node",
{%- if nodejs_usr_share_dir %}
  "file:{{ nodejs_usr_share_dir }}/",
{%- endif %}
  "file:{{ gramine.runtimedir() }}/",
  "file:{{ arch_libdir }}/",
  "file:/usr/{{ arch_libdir }}/",
  # Additional trusted files for our application
  "file:walle/"
]

################################## ADDITIONAL FEATURES #############################

# Remote attestation support
loader.env.RA_TYPE = "dcap"
sgx.remote_attestation = "dcap"

# System configuration
sys.enable_sigterm_injection = true

# Additional mounts
fs.mounts += [
  { type = "encrypted", path = "/data/", uri = "file:enclave_data/", key_name = "_sgx_mrenclave" },
  { type = "tmpfs", path = "/tmp" }
]